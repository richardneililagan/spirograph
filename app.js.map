{"version":3,"sources":["app/app.js","app/components/menu/menu.component.js","app/components/rotor-list/rotor-list.component.js","app/components/rotor/rotor.component.js","app/components/vue.app.js","app/core/renderer.js","app/core/rotor.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlhfile":"public/app.js","sourcesContent":["'use strict';\n\nvar _rotor = require('./core/rotor');\n\nvar _renderer = require('./core/renderer');\n\nvar _vue = require('./components/vue.app');\n\nvar root = new _rotor.Rotor(75, 0, 9);\n\n// : DEBUG\n\n\nvar secondaryRotor = new _rotor.Rotor(100, 0, 3);\nsecondaryRotor.addPen(100, 0);\n\nroot.addRotorLink(secondaryRotor, 0);\n\nvar tertiaryRotor = new _rotor.Rotor(175, 0, 6);\ntertiaryRotor.addPen(175, 0, 'red');\n\nsecondaryRotor.addRotorLink(tertiaryRotor, 0);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // :: get DOM hooks\n  var cyclorama = document.getElementById('cyclorama');\n  var renderer = new _renderer.Renderer(root);\n\n  renderer.initialize(cyclorama);\n\n  // :: --- initialize vue bindings\n\n  (0, _vue.initializeApp)({\n    rotors: [root],\n    renderer: renderer\n  });\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar component = {\n  props: ['renderer'],\n  template: '\\n    <div class=\"app-menu\">\\n      <button class=\"button -playsimulation\" v-on:click=\"play\">Play simulation</button>\\n      <button class=\"button -pausesimulation\" v-on:click=\"pause\">Pause simulation</button>\\n    </div>\\n  ',\n  methods: {\n    play: function play() {\n      this.renderer.play();\n    },\n    pause: function pause() {\n      this.renderer.pause();\n    }\n  }\n};\n\nexports.default = Vue.component('spirograph-menu', component);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar component = {\n  props: ['rotors'],\n  template: '\\n    <div class=\"rotor-list\">\\n      <rotor v-for=\"rotor in rotors\" v-bind:rotor=\"rotor\"></rotor>\\n    </div>\\n  '\n};\n\nexports.default = Vue.component('rotor-list', component);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar component = {\n  props: ['rotor'],\n  template: '\\n    <div class=\"rotor\">\\n      <div class=\"properties\">\\n        <label class=\"rotorproperty\">\\n          <span>r</span>\\n          <input v-model=\"rotor.radius\">\\n        </label>\\n        <label class=\"rotorproperty\">\\n          <span>speed</span>\\n          <input v-model=\"rotor._speed\">\\n        </label>\\n        <label class=\"rotorproperty\">\\n          <span>rot</span>\\n          <input v-model=\"rotor._rotation\">\\n        </label>\\n        <button class=\"action -addrotor\"></button>\\n        <button class=\"action -deleterotor\"></button>\\n      </div>\\n\\n      <rotor-list v-if=\"rotor.rotors.length\" v-bind:rotors=\"rotor.rotors\"></rotor-list>\\n    </div>\\n  '\n};\n\nexports.default = Vue.component('rotor', component);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializeApp = initializeApp;\nrequire('./menu/menu.component');\nrequire('./rotor-list/rotor-list.component');\nrequire('./rotor/rotor.component');\n\nfunction initializeApp(data) {\n  var app = new Vue({\n    el: '#chrome',\n    data: data\n  });\n\n  return app;\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Renderer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _two = require('two.js');\n\nvar _two2 = _interopRequireDefault(_two);\n\nvar _rotor = require('./rotor');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction plotPoint(origin, radius, angle) {\n  return {\n    x: Math.cos(angle) * radius + origin.x,\n    y: Math.sin(angle) * radius + origin.y\n  };\n}\n\nvar Renderer = exports.Renderer = function () {\n  _createClass(Renderer, [{\n    key: 'timeDelta',\n    get: function get() {\n      return this._timeDelta || 0;\n    }\n  }, {\n    key: 'origin',\n    get: function get() {\n      return {\n        x: this.canvas.width / 2,\n        y: this.canvas.height / 2\n      };\n    }\n  }, {\n    key: 'isPlaying',\n    get: function get() {\n      return this.canvas.playing;\n    }\n  }]);\n\n  function Renderer(root) {\n    var _this = this;\n\n    _classCallCheck(this, Renderer);\n\n    this.paths = {};\n    this._timeDelta = null;\n\n    this.rootRotor = root;\n    this.canvas = new _two2.default({\n      type: _two2.default.Types.canvas,\n      fullscreen: true\n    });\n\n    this.canvas.bind('update', function () {\n      if (_this.canvas.playing) {\n        if (_this._timeDelta === null) {\n          _this._timeDelta = 0;\n        } else {\n          _this._timeDelta = _this.canvas.timeDelta;\n        }\n      } else {\n        _this._timeDelta = null;\n      }\n    }).bind('pause', function () {\n      _this._timeDelta = null;\n    }).bind('render', function () {\n      return _this.render();\n    });\n\n    console.debug(this.canvas);\n  }\n\n  /**\r\n   * Attaches the Two instance into the DOM\r\n   *\r\n   * @param {*} element\r\n   * @memberof Renderer\r\n   */\n\n\n  _createClass(Renderer, [{\n    key: 'initialize',\n    value: function initialize(element) {\n      this.canvas.appendTo(element);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      this.canvas.clear();\n      this.drawRotor(this.rootRotor, this.origin, this.timeDelta);\n    }\n  }, {\n    key: 'drawRotor',\n    value: function drawRotor(rotor, origin, delta) {\n      var _this2 = this;\n\n      // :: rotate this rotor by the number of ms\n      rotor.rotate(delta);\n      var rotorPath = this.canvas.makeCircle(origin.x, origin.y, rotor.radius);\n\n      rotorPath.noFill();\n      rotorPath.stroke = 'rgba(0,0,0,.26)';\n      rotorPath.lineWidth = 0.5;\n\n      // :: draw rotor mark\n      var anchor = plotPoint(origin, rotor.radius, rotor.rotation);\n      var rotorMark = this.canvas.makeLine(origin.x, origin.y, anchor.x, anchor.y);\n\n      rotorMark.stroke = 'rgba(0,0,0,.26)';\n      rotorMark.lineWidth = 0.5;\n\n      // :: ---\n\n      // :: draw rotor pen paths\n      rotor.pens.forEach(function (pen) {\n        var projectedOrigin = plotPoint(origin, pen.radius, rotor.rotation + pen.rotation);\n        _this2.drawPenPath(pen, projectedOrigin);\n      });\n\n      // :: ---\n\n      // :: draw rotor links\n      rotor.links.forEach(function (link) {\n        var projectedOrigin = plotPoint(origin, rotor.radius, rotor.rotation + link.rotation);\n        _this2.drawRotor(link.rotor, projectedOrigin, delta);\n      });\n    }\n  }, {\n    key: 'drawPenPath',\n    value: function drawPenPath(pen, vertex) {\n      if (!this.paths[pen.id]) {\n        console.debug('Creating path for pen ' + pen.id);\n\n        var p = new _two2.default.Path([], false, true);\n\n        p.stroke = pen.color;\n        p.linewidth = pen.width;\n        p.noFill();\n\n        this.paths[pen.id] = p;\n      }\n\n      var path = this.paths[pen.id];\n      path.vertices.push(new _two2.default.Anchor(vertex.x, vertex.y));\n      this.canvas.scene.add(path);\n\n      // console.debug(path)\n    }\n  }, {\n    key: 'tick',\n    value: function tick() {\n      this.render();\n      this.canvas.update();\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      this.canvas.play();\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.canvas.pause();\n    }\n  }]);\n\n  return Renderer;\n}();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Pen = exports.Pen = function Pen(radius, rotation) {\n  var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'blue';\n  var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n\n  _classCallCheck(this, Pen);\n\n  this.rotation = 0;\n  this.radius = 10;\n  this.color = 'red';\n  this.width = 2;\n\n  this.radius = radius;\n  this.rotation = rotation;\n  this.color = color;\n  this.width = width;\n\n  // :: generate a (hopefully) unique id\n  this.id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\n\n/**\r\n * A Rotor is a circular object that rotates,\r\n * and can have other rotors attached to its circumference.\r\n *\r\n * @class Rotor\r\n */\n\n\nvar Rotor = exports.Rotor = function () {\n  _createClass(Rotor, [{\n    key: 'r',\n    value: function r() {\n      return this.rotors;\n    }\n\n    /**\r\n     * Creates an instance of Rotor.\r\n     * @param {number} r - radius length of the rotor.\r\n     * @param {number} rotation - starting rotation of the rotor, in radians.\r\n     * @param {number} speed - how many seconds to complete one full revolution.\r\n     * @memberof Rotor\r\n     */\n\n  }, {\n    key: 'rotation',\n\n\n    /**\r\n     * Current rotation, in radians.\r\n     *\r\n     * @type {number}\r\n     * @memberof Rotor\r\n     */\n    get: function get() {\n      return this._rotation || 0;\n    }\n\n    /**\r\n     * Returns the radians of rotation per ms\r\n     * for this rotor.\r\n     * This calculation is based off of the torque property.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof Rotor\r\n     */\n\n\n    /**\r\n     * Radius length.\r\n     *\r\n     * @type {number}\r\n     * @memberof Rotor\r\n     */\n\n  }, {\n    key: 'speed',\n    get: function get() {\n      // :: (2 * Math.PI / (speed * 1000))\n      return Math.PI / (this._speed * 500);\n    }\n\n    /**\r\n     * Returns all rotors attached to this rotor,\r\n     * as a flat collection.\r\n     *\r\n     * @readonly\r\n     * @type {Rotor[]}\r\n     * @memberof Rotor\r\n     */\n\n  }, {\n    key: 'rotors',\n    get: function get() {\n      return this.links.map(function (link) {\n        return link.rotor;\n      });\n    }\n  }]);\n\n  function Rotor() {\n    var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n    var rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n\n    _classCallCheck(this, Rotor);\n\n    this._rotation = 0;\n    this._speed = 10;\n    this.links = [];\n    this.pens = [];\n\n    this.radius = r;\n    this._rotation = rotation;\n    this._speed = speed;\n\n    Rotor.registration.push(this);\n  }\n\n  /**\r\n   * Incremets this rotor's rotation based on how much time has elapsed\r\n   * since the last render tick.\r\n   *\r\n   * @param {number} [tick=0] milliseconds since last render tick\r\n   * @memberof Rotor\r\n   */\n\n\n  _createClass(Rotor, [{\n    key: 'rotate',\n    value: function rotate() {\n      var tick = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this._rotation += this.speed * tick;\n      this._rotation %= 2 * Math.PI;\n    }\n\n    /**\r\n     * Attaches a Rotor to this one's circumference.\r\n     *\r\n     * @param {Rotor} rotor The Rotor to attach.\r\n     * @param {nunber} rotation The angle from 0 of the bisecting line that marks the anchor point in the circumference where this rotor is attached.\r\n     * @memberof Rotor\r\n     */\n\n  }, {\n    key: 'addRotorLink',\n    value: function addRotorLink(rotor, rotation) {\n      this.links.push({ rotation: rotation, rotor: rotor });\n    }\n  }, {\n    key: 'addPen',\n    value: function addPen(radius, rotation, color, width) {\n      this.pens.push(new Pen(radius, rotation, color, width));\n    }\n\n    /**\r\n     * Deregisters this Rotor,\r\n     * and all its links.\r\n     *\r\n     * @memberof Rotor\r\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.rotors.forEach(function (rotor) {\n        return rotor.remove();\n      });\n    }\n  }]);\n\n  return Rotor;\n}();\n\nRotor.registration = [];\n"]}